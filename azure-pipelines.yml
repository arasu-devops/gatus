trigger:
  branches:
    include:
      - Azure-main

variables:
  - group: CICD-Demo-var-group

stages:
- stage: BuildAndDeploy
  displayName: "Build and Deploy Stage"
  jobs:
  - job: DockerOps
    displayName: "Docker Build, Scan, Deploy"
    pool:
      vmImage: ubuntu-latest
    steps:
    
    # Step 1: Checkout Code from GitHub
    - checkout: self
      displayName: "Checkout GitHub repository"

    # Step 2: Docker Login
    - task: CmdLine@2
      displayName: "Login to Docker Hub"
      inputs:
        script: |
          set -e
          echo "Logging in to Docker Hub..."
          echo $(DOCKER_PASSWORD) | docker login -u arasu35 --password-stdin
          docker info

    # Step 3: Build Docker Image
    - task: CmdLine@2
      displayName: "Build Docker Image"
      inputs:
        script: |
          set -e
          echo "Building the Docker image..."
          docker build -t arasu35/gatus:latest -f ./Dockerfile .
          docker images

    # Step 4: Push Docker Image to Docker Hub
    - task: CmdLine@2
      displayName: "Push Docker Image to Docker Hub"
      inputs:
        script: |
          set -e
          echo "Tagging and pushing to Docker Hub..."
          docker push arasu35/gatus:latest
          sleep 7

    # Step 5: Pull Docker Image on Azure VM
    - task: AzureCLI@2
      displayName: "Pull Docker Image on Azure VM"
      inputs:
        azureSubscription: "CICD-Demo-Service-Connection"
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az vm run-command invoke \
            --resource-group CICD-demo-vm_group \
            --name CICD-demo-vm \
            --command-id RunShellScript \
            --scripts '
              echo "$(DOCKER_PASSWORD)" | docker login -u arasu35 --password-stdin
              sleep 7
              docker pull arasu35/gatus:latest
            '

    # Step 6: Run Trivy Scan & Generate Report in VM
    - task: AzureCLI@2
      displayName: "Run Trivy Scan & Generate Report"
      inputs:
        azureSubscription: "CICD-Demo-Service-Connection"
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az vm run-command invoke \
            --resource-group CICD-demo-vm_group \
            --name CICD-demo-vm \
            --command-id RunShellScript \
            --scripts '
              docker run --rm -v /home/azureuser/nginx/html:/output aquasec/trivy image \
                --format template --template "@contrib/html.tpl" \
                -o /output/trivy-report.html arasu35/gatus:latest
              docker restart nginx-reverse-proxy
            '

    # Step 7: Restart and Run Gatus Container
    - task: AzureCLI@2
      displayName: "Run Gatus Container on VM"
      inputs:
        azureSubscription: "CICD-Demo-Service-Connection"
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az vm run-command invoke \
            --resource-group CICD-demo-vm_group \
            --name CICD-demo-vm \
            --command-id RunShellScript \
            --scripts '
              docker stop gatus || true
              docker rm gatus || true
              docker run -d --name gatus -p 8081:8080 arasu35/gatus:latest
            '
